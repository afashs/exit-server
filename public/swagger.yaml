openapi: 3.0.0
info:
  version: 1.0.0
  title: 'exitgift.shop API'
  description: ''
servers:
  - description: 'exitgift.shop API'
    url: https://back.exitgift.shop:4000
tags:
  - name: User
  - name: File
  - name: Art
  - name: Auction
  - name: Puzzle
  - name: Paddle
  - name: Likes
  - name: Bid
paths:
  /signup:
    post:
      tags:
        - User
  /signin:
    post:
      tags:
        - User
  /signout:
    post:
      tags:
        - User
      parameters:
        - name: body
          description: json
  /account/{uuid}:
    get:
      tags:
        - User
      parameters:
        - name: uuid
          description: uuid
  /puzzle:
    get:
      tags:
        - Puzzle
    post:
      tags:
        - Puzzle
    put:
      tags:
        - Puzzle
    delete:
      tags:
        - Puzzle
  /paddle:
    get:
      tags:
        - Paddle
    post:
      tags:
        - Paddle
    put:
      tags:
        - Paddle
    delete:
      tags:
        - Paddle
  /likes:
    get:
      tags:
        - Likes
    post:
      tags:
        - Likes
    put:
      tags:
        - Likes
    delete:
      tags:
        - Likes
  /bid:
    get:
      tags:
        - Bid
    post:
      tags:
        - Bid
    put:
      tags:
        - Bid
    delete:
      tags:
        - Bid
  /file:
    get:
      tags:
        - File
      summary: files list
      description: Returns a file list
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/file'
        404 :
          description: file not found
    
  /file/{id}:
    get:
      tags:
        - File
      summary: Find file by ID
      description: Returns a single file
      parameters:
        - name: id
          in: path
          description: ID of file
          required: true
          schema:
            type: integer
      responses:
        200:
          description: binary file (img/ video)
          content:
            image:
              schema:
                type: string
                format: binary
            video:
              schema:
                type: string
                format: binary
        400:
          description: id is required
        404 :
          description: file not found
  /art:
    get:
      tags:
        - Art
      summary: Arts List
      description: Returns a Art List
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/art-list'
        404 :
          description: file not found
    post:
      tags:
        - Art
      summary: Add Art
      description: Returns a Uploaded Art
      requestBody:
        description: Art to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/art-post-json'
      responses:
        200:
          description: uploaded json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/art-list'
        400:
          description: request err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-err-json'
        500:
          description: server err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-err-json'

  /art/{uuid}:
    get:
      tags:
        - Art
      summary: Find art by uuid
      description: Returns a single Art
      parameters:
        - name: uuid
          in: path
          description: Art uuid
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/art-list'
        400:
          description: request err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-err-json'
        500:
          description: server err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-err-json'
    put:
      tags:
        - Art
      summary: Update Art
      description: Returns a Updated Art Property
      parameters:
        - name: uuid
          in: path
          description: Art uuid
          required: true
          schema:
            type: string
      requestBody:
        description: Art to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/art-put-json'
      responses:
        200:
          description: uploaded json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/art-list'
        400:
          description: request err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-err-json'
        500:
          description: server err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-err-json'
    delete:
      tags:
        - Art
      summary: Delete Art
      description: Returns a Deleted Art Property
      parameters:
        - name: uuid
          in: path
          description: Art uuid
          required: true
          schema:
            type: string
      responses:
        200:
          description: deleted json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/art-list'
        400:
          description: request err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-err-json'
        500:
          description: server err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-err-json'
  /art/user/{uuid}:
    get:
      tags:
        - Art
      summary: Find art by User uuid
      description: Returns a single Art
      parameters:
        - name: uuid
          in: path
          description: User uuid
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/art-list'
        400:
          description: request err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-err-json'
        500:
          description: server err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-err-json'      
  /auction:
    get:
      tags:
        - Auction
      summary: Auctions List
      description: Returns a Auctions List
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/auction-list'
        404 :
          description: file not found
    post:
      tags:
        - Auction
      summary: Add Auction
      description: Returns a Uploaded Auction
      requestBody:
        description: Auction to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auction-post-json'
      responses:
        200:
          description: uploaded json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auction-list'
        400:
          description: request err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-err-json'
        500:
          description: server err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-err-json'
    delete:
      tags:
        - Auction
      summary: Delete Auction
      description: Returns a Deleted Auction Property
      parameters:
        - name: uuid
          in: path
          description: Auction uuid
          required: true
          schema:
            type: string
      responses:
        200:
          description: deleted json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auction-list'
        400:
          description: request err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-err-json'
        500:
          description: server err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-err-json'

  /auction/{uuid}:
    get:
      tags:
        - Auction
      summary: Find Auction by uuid
      description: Returns a single Auction
      parameters:
        - name: uuid
          in: path
          description: Auction uuid
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/art-list'
        400:
          description: request err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-err-json'
        500:
          description: server err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-err-json'
    put:
      tags:
        - Auction
      summary: Update Auction
      description: Returns a Updated Auction Property
      parameters:
        - name: uuid
          in: path
          description: Auction uuid
          required: true
          schema:
            type: string
      requestBody:
        description: Auction to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auction-put-json'
      responses:
        200:
          description: uploaded json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auction-list'
        400:
          description: request err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-err-json'
        500:
          description: server err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-err-json'
  /auction/art/{uuid}:
    get:
      tags:
        - Auction
      summary: Find auction by Art uuid
      description: Returns a single Auction
      parameters:
        - name: uuid
          in: path
          description: Art uuid
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/auction-list'
        400:
          description: request err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-err-json'
        500:
          description: server err
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-err-json'                
components:
  schemas:
    client-err-json:
      type: object
      properties:
        msg:
          type: string
          example: uuid is required
    server-err-json:
      type: object
      properties:
        msg:
          type: string
          example: title already exist

    file:
      type: object
      properties:
        id:
          type: integer
          format: id
          example: 1
        file_name:
          type: string
          example: picture.png

    art-list:
      type: object
      properties:
        art_file_id:
          type: integer
          format: id
          example: 1
        art_artist_uuid:
          type: string
          example: 82865d2f-26b8-4611-85f1-933643995e79
        uuid:
          type: string
          example: e44f21af-a7c3-4c64-bf26-6c10edd4d0c3
        art_title:
          type: string
          example: test title
        art_desc:
          type: string
          example: test desc
        art_twitter:
          type: string
          example: test twit
        createdAt:
          type: string
          example: "2021-03-19T04:54:36.000Z"
        updatedAt:
          type: string
          example: "2021-03-19T04:54:36.000Z"

    art-post-json:
      type: object
      properties:
        file_id:
          type: integer
          format: id
          example: 1
        artist_uuid:
          type: string
          example: 82865d2f-26b8-4611-85f1-933643995e79
        title:
          type: string
          example: testTitle
        desc:
          type: string
          example: testDesc
        twitter:
          type: string
          example: testDesc

    art-put-json:
      type: object
      properties:
        desc:
          type: string
          example: testDesc
        twitter:
          type: string
          example: testDesc


    auction-list:
      type: object
      properties:
        art_uuid:
          type: string
          example: 82865d2f-26b8-4611-85f1-933643995e79
        uuid:
          type: string
          example: e44f21af-a7c3-4c64-bf26-6c10edd4d0c3
        auction_end_time:
          type: string
          example: "2021-03-19T04:54:36.000Z"
        auction_hammer_price:
          type: integer
          example: 10000
        auction_now_price:
          type: integer
          example: 1000
        auction_link:
          type: string
          example: "https://exitgift.shop/ongoing"
        auction_start_time:
          type: string
          example: "2021-03-19T04:54:36.000Z"
        createdAt:
          type: string
          example: "2021-03-19T04:54:36.000Z"
        updatedAt:
          type: string
          example: "2021-03-19T04:54:36.000Z"

    auction-post-json:
      type: object
      properties:
        art_uuid:
          type: string
          example: 82865d2f-26b8-4611-85f1-933643995e79
        start_time:
          type: string
          example: "2021-03-19T04:54:36.000Z"
        end_time:
          type: string
          example: "2021-03-19T04:54:36.000Z"
        hammer_price:
          type: integer
          example: 10000
        now_price:
          type: integer
          example: 1000
        link:
          type: string
          example: "https://exitgift.shop/ongoing"
    auction-put-json:
      type: object
      properties:
        hammer_price:
          type: integer
          example: 200000
        now_price:
          type: integer
          example: 1000